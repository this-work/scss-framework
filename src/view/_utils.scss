////
///
/// Utils functions
///
/// @group View
/// @since 2.3.0
///
////

@use 'sass:color';
@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:meta';
@use 'sass:selector';
@use 'sass:string';

@use './../theme/colors';
@use './../theme/spacings';

///
/// Mixin to style the `placeholder` text of an `input` element.
///
/// @param {string} $context ['&'] - [`optional`] Context for the placeholder rules
///
/// @file utils.scss
///
/// @example scss - Set placeholder color to purple
/// include placeholder() {
///     color: purple;
/// };
///
@mixin placeholder($context: '&') {
	@each $prefix in ':-ms-input-', '::' {
		#{$context}#{$prefix}placeholder {
			@content;
		}
	}
}

///
/// Mixin to style the text `selection` of a user interaction
///
/// @param {string} $color-foreground-name - Name of the color from the color array for the text
/// @param {string} $color-background-name - Name of the color from the color array for the background
///
/// @file utils.scss
///
/// @example scss - Set selection to black with white text color
/// include selection('white', 'black');
///
@mixin selection($color-foreground-name, $color-background-name) {
	::selection {
		background: color($color-background-name);
		color: color($color-foreground-name);
		opacity: 1;
	}
}

///
/// Deactivate all user interactions.
///
/// @file utils.scss
///
/// @example scss
/// include deactivate-user-selection();
///
@mixin deactivate-user-selection() {
	// stylelint-disable
	-webkit-touch-callout: none;
	-webkit-tap-highlight-color: transparent;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	// stylelint-enable
}

///
/// Mixin to hide the scrollbar
///
/// @file utils.scss
///
/// @example scss - Hide the scrollbar
/// include hide-scrollbar();
///
@mixin hide-scrollbar() {
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

///
/// Mixin to generate Styles for the RTL direction
/// Needs for usage a 'dir' attribute on a parent node
///
/// @content Styles for only the RTL direction
///
/// @file site.scss
///
@mixin rtl() {
	@at-root [dir='rtl'] & {
		@content;
	}
}

///
/// Mixin to generate Styles for the LTR direction
/// Works with and without 'dir' attribute
///
/// @content Styles for the LTR direction
///
/// @file site.scss
///
@mixin ltr() {
	@at-root html:not([dir='rtl']) & {
		@content;
	}
}
